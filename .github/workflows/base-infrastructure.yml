name: Base Infrastructure Pipeline

on:
  push:
    branches: [ master ]
    paths:
      - 'stacks/base-*/**'
      - '.github/workflows/base-infrastructure.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'stacks/base-*/**'
      - '.github/workflows/base-infrastructure.yml'

  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      is_deployment:
        required: true
        type: boolean
      terraform_stack:
        required: true
        type: string
        
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: 'Environment to deploy to'
        options:
          - poc
          - dev
          - prod
      is_deployment:
        required: true
        type: boolean
        description: 'Whether to apply changes or just plan'
      terraform_stack:
        required: true
        type: string
        description: 'Terraform stack to deploy'

jobs:
  base-networking:
    uses: .github/workflows/base-terraform-plan-and-apply.yml
    with:
      environment: dev
      is_deployment: ${{ github.ref == 'refs/heads/master' }}
      terraform_stack: base-networking
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_ROLE_ARN_READ_ONLY: ${{ secrets.AWS_ROLE_ARN_READ_ONLY }}
      STATE_BUCKET: ${{ secrets.STATE_BUCKET }}
      STATE_LOCK_TABLE: ${{ secrets.STATE_LOCK_TABLE }}

  base-support:
    needs: base-networking
    uses: ./.github/workflows/base-terraform-plan-and-apply.yml
    with:
      environment: dev
      is_deployment: ${{ github.ref == 'refs/heads/master' }}
      terraform_stack: base-support
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_ROLE_ARN_READ_ONLY: ${{ secrets.AWS_ROLE_ARN_READ_ONLY }}
      STATE_BUCKET: ${{ secrets.STATE_BUCKET }}
      STATE_LOCK_TABLE: ${{ secrets.STATE_LOCK_TABLE }}

  ecs-cluster:
    needs: base-support
    uses: ./.github/workflows/base-terraform-plan-and-apply.yml
    with:
      environment: dev
      is_deployment: ${{ github.ref == 'refs/heads/master' }}
      terraform_stack: ecs-cluster
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_ROLE_ARN_READ_ONLY: ${{ secrets.AWS_ROLE_ARN_READ_ONLY }}
      STATE_BUCKET: ${{ secrets.STATE_BUCKET }}
      STATE_LOCK_TABLE: ${{ secrets.STATE_LOCK_TABLE }}

  container-repositories:
    needs: ecs-cluster
    uses: ./.github/workflows/base-terraform-plan-and-apply.yml
    with:
      environment: dev
      is_deployment: ${{ github.ref == 'refs/heads/master' }}
      terraform_stack: container-repositories
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_ROLE_ARN_READ_ONLY: ${{ secrets.AWS_ROLE_ARN_READ_ONLY }}
      STATE_BUCKET: ${{ secrets.STATE_BUCKET }}
      STATE_LOCK_TABLE: ${{ secrets.STATE_LOCK_TABLE }}

  base-infrastructure:
    uses: ./.github/workflows/base-infrastructure.yml
    with:
      environment: ${{ inputs.environment || 'dev' }}
      is_deployment: ${{ inputs.is_deployment || false }}
      terraform_stack: base-networking

  data-pipeline:
    needs: base-infrastructure
    uses: ./.github/workflows/data-pipeline.yml
    with:
      environment: ${{ inputs.environment || 'dev' }}
      is_deployment: ${{ inputs.is_deployment || false }}
      terraform_stack: data-pipeline

  email-and-alerting:
    needs: data-pipeline
    uses: ./.github/workflows/email-and-alerting.yml
    with:
      environment: ${{ inputs.environment || 'dev' }}
      is_deployment: ${{ inputs.is_deployment || false }}
      terraform_stack: email-and-alerting