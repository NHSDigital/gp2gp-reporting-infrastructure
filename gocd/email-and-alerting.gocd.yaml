format_version: 4
pipelines:
  "data-pipeline-email-and-alerting":
    group: gp2gp-data-pipeline-infra
    label_template: "${email_and_alerting[:8]}"
    materials:
      email_and_alerting:
        plugin_configuration:
          id: git-path
        options:
          url: https://github.com/nhsconnect/prm-gp2gp-data-pipeline-infra.git
          path: stacks/email-and-alerting, lambda/log-alerts-technical-failures-above-threshold, lambda/log-alerts-pipeline_error, lambda/log-alerts-technical-failures-above-threshold, lambda/email-report
      reports_generator_task:
        pipeline: data-pipeline-reports-generator-task
        stage: apply_dev
    stages:
      - validate:
          clean_workspace: true
          jobs:
            test:
              resources:
                - docker
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks dojo-validate email-and-alerting dev
      - plan_dev:
          clean_workspace: true
          jobs:
            plan:
              resources:
                - docker
              artifacts:
                - build:
                    source: dev.tfplan
                - build:
                    source: lambda/build/log-alerts-technical-failures-above-threshold.zip
                    destination: lambda/build/
                - build:
                    source: lambda/build/log-alerts-pipeline-error.zip
                    destination: lambda/build/
                - build:
                    source: lambda/build/email-report.zip
                    destination: lambda/build/
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks dojo-plan email-and-alerting dev
      - apply_dev:
          clean_workspace: true
          jobs:
            apply:
              resources:
                - docker
              tasks:
                - fetch:
                    stage: plan_dev
                    job: plan
                    source: dev.tfplan
                    is_file: yes
                - fetch:
                    stage: plan_dev
                    job: plan
                    source: lambda/build/log-alerts-technical-failures-above-threshold.zip
                    destination: lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_dev
                    job: plan
                    source: lambda/build/log-alerts-pipeline-error.zip
                    destination: lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_dev
                    job: plan
                    source: lambda/build/email-report.zip
                    destination: lambda/build/
                    is_file: yes
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks dojo-apply email-and-alerting dev
      - validate_preprod:
          clean_workspace: true
          approval:
            type: manual
            allow_only_on_success: true
          jobs:
            plan:
              resources:
                - docker
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks dojo-validate email-and-alerting preprod
      - plan_preprod:
          clean_workspace: true
          jobs:
            plan:
              resources:
                - docker
              artifacts:
                - build:
                    source: preprod.tfplan
                - build:
                    source: lambda/build/log-alerts-technical-failures-above-threshold.zip
                    destination: lambda/build/
                - build:
                    source: lambda/build/log-alerts-pipeline-error.zip
                    destination: lambda/build/
                - build:
                    source: lambda/build/email-report.zip
                    destination: lambda/build/
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks dojo-plan email-and-alerting preprod
      - apply_preprod:
          clean_workspace: true
          approval:
            type: manual
            allow_only_on_success: true
          jobs:
            apply:
              resources:
                - docker
              tasks:
                - fetch:
                    stage: plan_preprod
                    job: plan
                    source: preprod.tfplan
                    is_file: yes
                - fetch:
                    stage: plan_preprod
                    job: plan
                    source: lambda/build/log-alerts-technical-failures-above-threshold.zip
                    destination: lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_preprod
                    job: plan
                    source: lambda/build/log-alerts-pipeline-error.zip
                    destination: lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_preprod
                    job: plan
                    source: lambda/build/email-report.zip
                    destination: lambda/build/
                    is_file: yes
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks dojo-apply email-and-alerting preprod
