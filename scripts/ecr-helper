#!/bin/bash

set -Eeo pipefail

aws_region=eu-west-2

function assume_role() {
  role_arn=$(
    aws ssm get-parameters \
        --region ${aws_region} \
        --names ${role_param} \
        --query 'Parameters[0].Value' \
        --output text
  )

  timestamp=$(date +%s)
  session_name="ci-ecr-helper-${timestamp}"
  sts=$(
    aws sts assume-role \
      --role-arn $role_arn \
      --role-session-name $session_name \
      --output json
  )

  unset AWS_ACCESS_KEY_ID
  unset AWS_SECRET_ACCESS_KEY
  unset AWS_SESSION_TOKEN
  unset AWS_SECURITY_TOKEN

  export AWS_ACCESS_KEY_ID=$(echo $sts | jq -r .Credentials.AccessKeyId)
  export AWS_SECRET_ACCESS_KEY=$(echo $sts | jq -r .Credentials.SecretAccessKey)
  export AWS_SESSION_TOKEN=$(echo $sts | jq -r .Credentials.SessionToken)
}


function get_repo_uri_prefix() {
  assume_role
  aws_account_id=$(aws sts get-caller-identity --query Account --output text)
  repository_uri_prefix=${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com
  echo $repository_uri_prefix
}

function get_login() {
  assume_role
  aws ecr get-login --no-include-email --region ${aws_region}
}

function usage() {
    echo "Usage:"
    echo "ecr-helper [get-login|get-repo-prefix] ROLE-PARAM"
    exit 1
}

task=$1
role_param=$2

if [ "$#" -ne 2 ]; then
    echo "Illegal number of parameters"
    usage
fi

case "${task}" in
  get-login)
    get_login
    ;;
  get-repo-uri-prefix)
    get_repo_uri_prefix
    ;;
  *)
    echo "Invalid command: '${task}'"
    usage
  ;;
esac
